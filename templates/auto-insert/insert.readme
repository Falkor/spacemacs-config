-*- mode: markdown; mode: visual-line; fill-column: 80 -*-

![By Falkor](https://img.shields.io/badge/by-Falkor-blue.svg) [![Licence](https://img.shields.io/badge/license-GPL--3.0-blue.svg)](http://www.gnu.org/licenses/gpl-3.0.html) [![github](https://img.shields.io/badge/git-github-lightgray.svg)](https://github.com/[...]) [![Issues](https://img.shields.io/badge/issues-github-green.svg)](https://github.com/[...]/issues)[![GitHub forks](https://img.shields.io/github/forks/[...]?style=flat-square)](https://github.com/[...])

       Time-stamp: <>

       Copyright (c) %y %U <%a>

__%@__

Repository holding ...

## Installation / Repository Setup

This repository is hosted on [Github](https://github.com/ULHPC/tools).

* Git interactions with this repository (push, pull etc.) are typically performed over SSH using the port 22
* To clone this repository, proceed as follows (adapt accordingly):

```bash
mkdir -p ~/git/github.com/[...]
cd ~/git/github.com/[...]
git clone https://github.com/[...].git
```

**`/!\ IMPORTANT`**: Once cloned, initiate your local copy of the repository by running:

```bash
cd [...]
make setup
```

This will initiate the [Git submodules of this repository](.gitmodules) and setup the [git flow](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow) layout for this repository.
Later on, you can update your local branches by running:

```bash 
make up
```
If upon pulling the repository, you end in a state where another collaborator have upgraded the Git submodules for this repository, you'll end in a dirty state (as reported by modifications within the `.submodules/` directory). 
In that case, just after the pull, you **have to run** `git submodule init` to ensure consistency with regards the Git submodules.

## Issues / Feature request

You can submit bug / issues / feature request using the [`%b` Project Tracker](https://[...]/issues/)

## Misc

### [Git-flow](https://github.com/nvie/gitflow)

The Git branching model for this repository follows the guidelines of
[gitflow](http://nvie.com/posts/a-successful-git-branching-model/).
In particular, the central repository holds two main branches with an infinite lifetime:

* `production`: the *production-ready* branch
* `master`: the main branch where the latest developments interviene. This is the *default* branch you get when you clone the repository.

Thus you are more than encouraged to install the [git-flow](https://github.com/nvie/gitflow) extensions following the [installation procedures](https://github.com/nvie/gitflow/wiki/Installation) to take full advantage of the proposed operations. 
The associated [bash completion](https://github.com/bobthecow/git-flow-completion) might interest you also.
If you are interested, see [`git-workflow.md`](https://github.com/ULHPC/sw/blob/devel/docs/contributing/git-workflow.md) for details on git workflows in general, and how the approach in place in this repo can be used.

